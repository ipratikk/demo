Armstrong number - An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself. For example, 371 is an Armstrong number since 3^3 + 7^3 + 1^3 = 371. To do this we use the logic of extracting the digits from the last and then cubing the digit while adding the cubed value to a sum. The next digit is then taken and cubed and then added to the sum. On reaching a position where the number becomes 0, the sum is compared with the original number that was used and if it matches, it results an Armstrong Number.

Fibonacci - The Fibonacci sequence is a series of numbers where a number is found by adding up the two numbers before it. Starting with 0 and 1, the sequence goes 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, and so forth. To do this we initialise two variables, let them be a and b. A stores the 1st value and b stores the 2nd value in the series. The sum is stored in another variable 'c'. Now the thre variables are printed in order of a,b & c. Next to increase the series we define the 1st value as the 2nd value(a=b) and the 2nd value as the sum (b=c). The sum is again found and stored in C. This continues till the limit is reached. Hence, The fibonacci series is displayed.

Palindrome(number)- A number which remains the same on reversing its digits is called a palindrome number. To do this, we extract the digits one by one using a loop. During the 1st iteration of the loop, the last digit is extracted and it is then pushed to a sum. The sum here is defined as the reversed number. The sum is initialised in such a way that on every iteration of the loop the sum is first multiplied by 10 and then added by the digit extracted. The loop is continued till the number becomes 0. At this situation, we compare the sum and the original number that was entered. If they match, it is considered to be a Palindrome Number.

Palindrome(String)- A word which remains the same on reversing its characters is called a Palindrome String. To do this, we extract the characters one by one using charAt() function under a loop. The loop is initialised in such a way that it starts from the last of the word. The length of the string is taken using string.length() function but the loop is initialised as length-1 as length is a function that starts from 1 but charAt() starts from 0. During the 1st iteration of the loop, the last character is extracted and it is then pushed to a sum. The sum here is defined as the reversed word. The sum is initialised in such a way that on every iteration of the loop the sum is added by the character extracted. The loop is continued till it reaches 0. At this situation, we compare the sum and the original word that was entered. If they match, it is considered to be a Palindrome String.

Perfect Number- A number is called a perfect number if by adding all the positive divisors of the number (except itself), the result is the number itself. 6 is the first perfect number. Its divisors (other than the number itself: 6) are 1, 2, and 3 and 1 + 2 + 3 equals 6. Other perfect numbers include 28, 496 and 8128. To do this, We need to find the divisors. A loop is run till number/2. The number is then mod(%) by every value that the loop attains. If the mod value returns anything other than 0 it is discarded else the loop value is added to a sum. On completion of the loop the sum is compared with the original number entered. If the result is true, It is a Perfect Number.